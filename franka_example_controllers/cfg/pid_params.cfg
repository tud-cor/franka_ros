#!/usr/bin/env python
PACKAGE = "franka_example_controllers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("kp1", double_t, 0, "Proportional gain for joint 1", 10, 0, 1000)
gen.add("kp2", double_t, 0, "Proportional gain for joint 2", 10, 0, 1000)
gen.add("kp3", double_t, 0, "Proportional gain for joint 3", 10, 0, 1000)
gen.add("kp4", double_t, 0, "Proportional gain for joint 4", 10, 0, 1000)
gen.add("kp5", double_t, 0, "Proportional gain for joint 5", 10, 0, 1000)
gen.add("kp6", double_t, 0, "Proportional gain for joint 6", 10, 0, 1000)
gen.add("kp7", double_t, 0, "Proportional gain for joint 7", 10, 0, 1000)

gen.add("ki1", double_t, 0, "Integral gain for joint 1", 0, 0, 1000.0)
gen.add("ki2", double_t, 0, "Integral gain for joint 2", 0, 0, 1000.0)
gen.add("ki3", double_t, 0, "Integral gain for joint 3", 0, 0, 1000.0)
gen.add("ki4", double_t, 0, "Integral gain for joint 4", 0, 0, 1000.0)
gen.add("ki5", double_t, 0, "Integral gain for joint 5", 0, 0, 1000.0)
gen.add("ki6", double_t, 0, "Integral gain for joint 6", 0, 0, 1000.0)
gen.add("ki7", double_t, 0, "Integral gain for joint 7", 0, 0, 1000.0)

gen.add("ki1_saturation", double_t, 0, "Saturation limit of integral error for joint 1", 1000, 0, 10000)
gen.add("ki2_saturation", double_t, 0, "Saturation limit of integral error for joint 2", 1000, 0, 10000)
gen.add("ki3_saturation", double_t, 0, "Saturation limit of integral error for joint 3", 1000, 0, 10000)
gen.add("ki4_saturation", double_t, 0, "Saturation limit of integral error for joint 4", 1000, 0, 10000)
gen.add("ki5_saturation", double_t, 0, "Saturation limit of integral error for joint 5", 1000, 0, 10000)
gen.add("ki6_saturation", double_t, 0, "Saturation limit of integral error for joint 6", 1000, 0, 10000)
gen.add("ki7_saturation", double_t, 0, "Saturation limit of integral error for joint 7", 1000, 0, 10000)

gen.add("kd1", double_t, 0, "Derivative gain for joint 1", 10, 0, 100)
gen.add("kd2", double_t, 0, "Derivative gain for joint 2", 10, 0, 100)
gen.add("kd3", double_t, 0, "Derivative gain for joint 3", 10, 0, 100)
gen.add("kd4", double_t, 0, "Derivative gain for joint 4", 10, 0, 100)
gen.add("kd5", double_t, 0, "Derivative gain for joint 5", 10, 0, 100)
gen.add("kd6", double_t, 0, "Derivative gain for joint 6", 10, 0, 100)
gen.add("kd7", double_t, 0, "Derivative gain for joint 7", 10, 0, 100)

exit(gen.generate(PACKAGE, "dynamic_compliance", "pid_params"))
